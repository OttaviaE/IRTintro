---
title: "Item Response Theory for beginners"
subtitle: "Item time!"
author: "Dr. Ottavia M. Epifania"
institute: "Rovereto (TN)"
date: "University of Trento, \\ 17 November 2023"
format: 
  revealjs: 
    theme: serif
    incremental: true  
    slide-number: true
    show-slide-number: all
    embed-resources: true
    menu: 
      side: left
      width: normal
editor: source
execute: 
  eval: true
  echo: false
  warning: false
  fig-align: center
  out-width: 80%
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T, 
                      warning = F, 
                      message = F, 
                      fig.align = "center", 
                      out.width = "90%", 
                      class.output="scroll-100")
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(purl = knitr::hook_purl)

knitr::knit_hooks$set(output = function(x, options) {
  if (!is.null(n <- options$out.lines)) {
    x <- xfun::split_lines(x)
    if (length(x) > n) {
      # truncate the output
      x <- c(head(x, n), "....\n")
    }
    x <- paste(x, collapse = "\n")
  }
  hook_output(x, options)
})
library(TAM)
library(mokken)
library(lavaan)
library(difR)
library(sirt)
library(ggplot2)
library(tidyverse)
library(knitr)
set.seed(999)
N = 1000
b <- runif(5, -3,3)
a = c(runif(5, 0.4, 2))
true_theta = seq(-4, 4, length.out = N)
data <- sirt::sim.raschtype( true_theta, b=b, 
                             fixed.a = a)
true_thetaES = seq(-5, 2, length.out = N-200)
bES <- runif(8, -5,5)
aES = rep(1, 8)

dataES = sirt::sim.raschtype(true_thetaES, b = bES, fixed.a=aES)


IRT <- function(theta, a = 1, b = 0, c = 0,e = 1) {
  y <- c + (e - c) * exp(a * (theta - b)) / (1 + exp(a * (theta - b)))
  y[is.na(y)] = 1
  return(y)
}

i_info <- function(b, a=1,c=0, theta = seq(-5,5,length.out=1000)){
 
P <- NULL 
Q <- NULL
Ii <- NULL
for(i in 1:1000){
  P[i] <- 1/(1+ exp (-a*(theta[i] - b)))
  Q[i]= 1-P[i]
  Ii[i] =(a*Q[i]*(P[i]-c)^2)/(P[i]*((1-c)^2)) # (3PL)
   }
return(Ii)
}
# Function to get all item information
item_info <- function(b,a=1, c= 0){
item <- NULL
  for(i in 1:length(b)){
  item[[i]] <- i_info(b[i],a[i])
  }
return(item)
}

set.seed(999)

theta = seq(-4,4,length.out=1000)
library(xtable)


```

# Item fit 

## 

The fit of each item to the model can be evaluated: 

- $S - X^2$ (Orland & Thissen, 2000): Statistics based on the $\chi^2$. If significant, the item does not fit to the model

- *Root Mean Squared Deviation* (RMSD): Difference between what expected under the model and reala data (the lower the better). Values under $.15$ define an acceptable fit of the item to the model, values under $.10$ are optimal 

- Rasch model only $\rightarrow$ Infit and outfit statistics

## Evaluating item fit I

:::{.panel-tabset}

## Look at the data


```{r eval =T, echo = FALSE}
data = read.csv("data/itemClass.csv", header = T, sep = ",")
prop_item = data.frame(item = names(colMeans(data[, -c(1:2)])), 
           proportion = colMeans(data[, -c(1:2)]))

ggplot(prop_item, 
       aes(x = reorder(item, proportion), 
           y = proportion), color = item) + geom_bar(stat = "identity") + theme_light() + 
  ylab("Proportion correct") + ylim(0, 1) +
  theme(legend.position = "none", 
        axis.title = element_text(size = 26), 
        axis.title.x = element_blank(), 
        axis.text = element_text(size = 22))

```



<details><summary>Show code</summary>
```{r eval =FALSE, echo = TRUE}
data = read.csv("data/itemClass.csv", header = T, sep = ",")
prop_item = data.frame(item = names(colMeans(data[, -c(1:2)])), 
           proportion = colMeans(data[, -c(1:2)]))

ggplot(prop_item, 
       aes(x = reorder(item, proportion), 
           y = proportion), color = item) + geom_bar(stat = "identity") + theme_light() + 
  ylab("Proportion correct") + ylim(0, 1) +
  theme(legend.position = "none", 
        axis.title = element_text(size = 26), 
        axis.title.x = element_blank(), 
        axis.text = element_text(size = 22))
```
</details>

## Fitting & choosing a model {.scrollable}

```{r echo = FALSE}
m1pl = tam.mml(data[, grep("item", colnames(data))], verbose = F)

m2pl = tam.mml.2pl(data[, grep("item", colnames(data))], irtmodel = "2PL", verbose = F)

m3pl = tam.mml.3pl(data[, grep("item", colnames(data))], est.guess = grep("item", colnames(data)),
                     verbose = F)

IRT.compareModels(m1pl, m2pl, m3pl) 
```


<details><summary>Show code</summary>
```{r eval =FALSE, echo = TRUE}
m1pl = tam.mml(data[, grep("item", colnames(data))], verbose = F)

m2pl = tam.mml.2pl(data[, grep("item", colnames(data))], irtmodel = "2PL", verbose = F)

m3pl = tam.mml.3pl(data[, grep("item", colnames(data))], est.guess = grep("item", colnames(data)),
                     verbose = F)

IRT.compareModels(m1pl, m2pl, m3pl)

```
</details>

## Fit of the model 


```{r echo = FALSE}
fit_m1pl = tam.modelfit(m1pl, progress = F)

fit_m1pl$statlist %>% kable(align = "c", 
                            row.names = FALSE, 
                            digits = rep(2, 4))
```


<details><summary>Show code</summary>
```{r eval =FALSE, echo = TRUE}
fit_m1pl$statlist
```
</details>



:::


## Evaluating item fit II

:::{.panel-tabset}

## Item fit 

```{r out.lines = 20}
item_fit_1pl = IRT.itemfit(m1pl)
str(item_fit_1pl)
```


## $\chi^2$


```{r echo = FALSE}
item_fit_1pl$chisquare_stat


```


<details><summary>Show code</summary>
```{r eval =FALSE, echo = TRUE}
item_fit_1pl$chisquare_stat
```
</details>

## RMSD


```{r echo = FALSE}
item_fit_1pl$RMSD_summary %>% kable(aling = "c", digits = 2)
item_fit_1pl$RMSD %>% kable(aling = "c", digits = 2)
```


<details><summary>Show code</summary>
```{r eval =FALSE, echo = TRUE}
item_fit_1pl$RMSD_summary %>% kable(aling = "c", digits = 2)
item_fit_1pl$RMSD %>% kable(aling = "c", digits = 2)
```
</details>

:::

# Differential Item Functioning 


## An example 

The mass of Iodine 131 decreases by 1/2 every 8 days because of radioactive decay. 

In a laboratory, there are 2grams of Iodine 131. How many grams there would be after 16 days? 

<details><summary>Correct response</summary>
0.5grams
</details>

## 


```{r}
#| echo: false
b = c(-0.5616, -0.07)
a = c(1,1)


par(mar = c(5,7,4,2) + 0.1) 
plot(theta, IRT(theta, b = b[1], a = a[1]),
     cex.lab= 2.5, 
     cex.axis =1.5, cex.main = 3,
       xlab = expression(theta), ylab = "P(x = 1)",
       xlim = c(-4, 4), ylim = c(0, 1), 
     type = "l", lwd = 3, 
     col = "royalblue", main = "Item Charcteristic Curve (ICC)")
text(x= -1.5, y = 0.6, "M", col = "royalblue", cex = 2)
lines(theta, IRT(theta, b=b[2], 
                a = 1), 
      lty = 1, lwd=3, col = "magenta")
text(x= 1.5, y = 0.6, "F", col = "magenta", cex = 2)
```


## 

The same item presented to two different groups paired for their level of latent trait... does not have the same probability of being endorsed!

The subjects are paired according to their level of the latent trait. **Are there any differences in the performance to the item**?

Theoretically: Different subjects but with the same level of the latent trait (i.e., **paired**) should have similar performances on the item


If this expectation is not met $\rightarrow$ **Differential Item Functioning** (**DIF**)


## Reference vs. focal group

The comparison to investigate items with DIF is between two groups: 

- **Reference group**: It is the "baseline" group. For instance, if the test/questionnaire has been validated in a second language, the reference group is the original group

- **Focal group**: It is the focus of the DIF investigation, where we suepct the items of the test might be working differently 

## Uniform DIF 

The item "favors" one of the two groups (either the focal or the reference one) *constantly*

```{r}
#| echo: false
difficulty <- c(-1, 1)
par(mar = c(5,7,4,2) + 0.1) 
 theta <- theta <- seq(-7, 7, .001)
plot(theta, IRT(theta, b=difficulty[1]),
     cex.lab= 2, 
     cex.axis =1.5,
       xlab = expression(theta), ylab = expression(paste("P(", x[vi], " = 1)")),
       xlim = c(-5, 5), ylim = c(0, 1), 
     type = "l", lwd = 3, 
     col = "royalblue")

#item B
lines(theta, IRT(theta, b = difficulty[2]), 
      lty = 4, lwd=3, col = "magenta")
```

## Not-uniform DIF 

The item favors one of the group $\rightarrow$ it is not constant along the latent trait

```{r}
#| echo: false
difficulty <- c(1, 1)
par(mar = c(5,7,4,2) + 0.1) 
 theta <- theta <- seq(-7, 7, .001)
plot(theta, IRT(theta, b=difficulty[1], a = 1),
     cex.lab= 2, 
     cex.axis =1.5,
       xlab = expression(theta), ylab = expression(paste("P(", x[vi], " = 1)")),
       xlim = c(-5, 5), ylim = c(0, 1), 
     type = "l", lwd = 3, 
     col = "royalblue")

#item B
lines(theta, IRT(theta, b = difficulty[2], a = 1.5), 
      lty = 4, lwd=3, col = "magenta")
```


## DIF Investigation

IRT-based methods: Subjects are paired according to the estimates of their *latent trait level* $\theta$

Score-based methods: Subjects are paired to the the *observed score*



:::: {.columns}

::: {.column}

Uniform DIF 

- 1PL

- 2PL 

- 3PL 



:::

::: {.column}

Non-Uniform DIF 

- 2PL 

- 3PL

:::

::::

## Likelihood Ratio Test 

Thissen, Steinber, & Wainer (1998)

Two IRT models: 

1. A "no DIF" model $\rightarrow$ parameters are constrained to be equal in the two groups 

2. A "DIF" model $\rightarrow$ parameters are left free to vary between the two groups 

It is like the LRT on a linear model where the group belonging (Focal Vs. Reference) is used as a predictor or not

## Lord 

Lord (1980)

The item parameters are estimated in both the reference and the focal groups

If there is a significant difference in the item estimates between groups $\rigtharrow$ DIF 

Beyond significance: Lord's $\Delta$:

- $< 1.00$: Negligible DIF 

- $1.00 < d < 1.5$: Moderate DIF 

- $> 1.5$: High DIF 

## Raju's Area  

Raju (1988)

It considers the DIF as the area between the ICCs of the items

If the area between the ICCs is 0, then the item presents no DIF




